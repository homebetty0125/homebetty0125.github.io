{"version":3,"sources":["lib/Service.js","lib/common.js","components/Profile.js","components/Education.js","components/Information.js","components/Projects.js","components/DescCyberinfo.js","components/DescFFNStart.js","components/DescFFNEnd.js","components/Experience.js","components/Footer.js","Resume.js","serviceWorker.js","index.js"],"names":["Service","getData","url","axios","get","common","imgPath","period","start","end","replace","handleParagraph","str","Profile","props","className","src","alt","nameEnglish","nameChinese","cellphone","email","href","github","title","target","rel","Educations","education","map","item","idx","key","school","major","Information","state","active","handleClick","setState","this","onClick","thumb","data-icon","dangerouslySetInnerHTML","__html","about","Education","PureComponent","Projects","companyIndex","projects","link","name","description","DescCyberinfo","TSB","DescFFNStart","DescFFNEnd","Experience","showDescComponent","company","compoanyIndex","experience","data-idx","position","Footer","Resume","skills","then","res","data","profile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0505c561.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst Service = {\n    getData: (url) => (\n        axios.get(url)\n    )\n};\n\nexport default Service;\n","const common = {\n\n    imgPath: './images',\n    period: (start, end) => (`${start.replace(/-/g, '/')} - ${end.replace(/-/g, '/')}`),\n    handleParagraph: (str) => (str.replace(/\\n/g, '<br>')),\n\n};\n\nexport default common;\n","import React, { Fragment } from 'react';\nimport common from '../lib/common';\n\nconst Profile = (props) => (\n\n    <Fragment>\n\n        <div className=\"profile\">\n            <div className=\"left thumb me\">\n                <img src={`${common.imgPath}/me.jpg`} alt={props.nameEnglish} />\n            </div>\n            <div className=\"right\">\n                <div className=\"name\">{props.nameChinese} <span>({props.nameEnglish})</span></div>\n                <div className=\"contact\">\n                    <p>\n                        <span>\n                            <i className=\"material-icons\">phone_enabled</i>\n                        </span>\n                        <span>{props.cellphone}</span>\n                    </p>\n                    <p>\n                        <span>\n                            <i className=\"material-icons\">mail</i>\n                        </span>\n                        <span>{props.email}</span>\n                    </p>\n                    <a href={props.github}\n                       title=\"GitHub\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        <span>\n                            <i className=\"material-icons\">link</i>\n                        </span>\n                        <span>GitHub</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    </Fragment>\n\n);\n\nexport default Profile;\n","import React, { Fragment } from 'react';\n\nimport common from '../lib/common';\n\nconst Educations = (props) => {\n\n    const education = (edu) => edu.map((item, idx) => (\n\n        <li className=\"item-wrap\" key={idx}>\n            <div className=\"thumb\">\n                <img src={`${common.imgPath}/school-${idx + 1}.jpg`} alt=\"\" />\n            </div>\n            <div className=\"content\">\n                <h3>{item.school}</h3>\n                <div className=\"major\">{item.major}</div>\n                <span className=\"date\">{common.period(item.start, item.end)}</span>\n            </div>\n        </li>\n\n    ));\n\n    return (\n\n        <Fragment>\n\n            <ul className=\"items\">\n                {education(props.education)}\n            </ul>\n\n        </Fragment>\n\n    );\n\n};\n\nexport default Educations;\n","import React, { Fragment, PureComponent } from 'react';\n\nimport common from '../lib/common';\n\nimport Profile from './Profile';\nimport Education from './Education';\n\nclass Information extends PureComponent {\n\n    state = {\n        active: false,\n    };\n\n    handleClick = () => {\n\n        this.setState({\n            active: !this.state.active,\n        });\n\n    }\n\n    render () {\n\n        return (\n\n            <Fragment>\n\n                <aside className={`information ${this.state.active ? 'active' : ''}`}>\n\n                    {/* 手機版 Slide Icon */}\n                    <button className=\"mobile show-more\"\n                        onClick={this.handleClick}>\n                        <i className=\"material-icons\">\n                            {this.state.active ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}\n                        </i>\n                    </button>\n\n                    {/* 個人資料 */}\n                    <Profile\n                        thumb={this.props.thumb}\n                        nameChinese={this.props.nameChinese}\n                        nameEnglish={this.props.nameEnglish}\n                        cellphone={this.props.cellphone}\n                        email={this.props.email}\n                        github={this.props.github}\n                    />\n\n                    {/* 給手機版下拉 Wrap */}\n                    <div className=\"other-info\">\n\n                        {/* 關於我 */}\n                        <div className=\"about\">\n                            <h2 className=\"title\" data-icon=\"person_pin\">\n                                <span>關於我</span>\n                            </h2>\n                            <p dangerouslySetInnerHTML={{ __html: common.handleParagraph(this.props.about) }}></p>\n                        </div>\n\n                        {/* 學歷 */}\n                        <div className=\"education\">\n                            <h2 className=\"title\" data-icon=\"school\">\n                                <span>教育程度</span>\n                            </h2>\n\n                            <Education\n                                education={this.props.education}\n                            />\n                        </div>\n                    </div>\n\n                </aside>\n\n            </Fragment>\n\n        );\n\n    }\n\n}\n\nexport default Information;\n","import React, { Fragment } from 'react';\n\nconst Projects = (props) => {\n\n    const project = (projects) => projects.map((item, idx) => (\n\n        <li key={idx}>\n            {\n                (item.link) ? (\n\n                    <Fragment>\n                        <a href={item.link}\n                            title={item.name}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">{item.name}</a>{`：${item.description}`}\n                    </Fragment>\n\n                ) : (\n\n                    <Fragment>\n                        <span>{item.name}</span>{`：${item.description}`}\n                    </Fragment>\n\n                )\n            }\n        </li>\n\n    ));\n\n    return (\n\n        <Fragment>\n\n            <ul className={`projects ${props.companyIndex}`}>\n                {project(props.projects)}\n            </ul>\n\n        </Fragment>\n\n    )\n};\n\nexport default Projects;\n","import React, { Fragment } from 'react';\nimport common from '../lib/common';\nimport Projects from './Projects';\n\nconst DescCyberinfo = (props) => {\n\n    const TSB = props.projects[0];\n\n    return (\n\n        <Fragment>\n\n            <div>\n                開發團隊導入敏捷式開發（Agile）的 Scrum 模式來執行專案流程，並透過 Git 版控有效管理每個 Sprint 要上線的專案。\n                <br/>\n                <br/>\n                主要負責專案為轉送幫的開發與維護，使用技術與框架有：\n                <br/>\n                    - 前端部分 → Bootstrap、SCSS、Javascript ES6 和 Webpack。<br/>\n                    - 後端部分 → PHP 與 CI（CodeIgniter）。\n                <br/>\n                <br/>\n                同時也參與協同開發，像是：<br/>\n                    - 手機版建置（於年初上線）。<br/>\n                    - 重構主流程 → 與其他開發者討論接口（API）設計、程式架構與畫面翻新。\n                <br/>\n\n                {/* 開啟轉送幫網站 > 蝙蝠特效 */}\n                <div className=\"open-tsb bat\">\n                    <img src={`${common.imgPath}/holloween-bat.png`} className=\"web\" alt=\"bat\" />\n                    <a href={TSB.link}\n                       title={TSB.name}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">點我看{TSB.name}</a>\n                </div>\n\n                <br/>\n                而次要負責的專案有支援其他平台開發與各平台活動頁切版（Web + RWD）：\n            </div>\n\n            {/* 過往專案 */}\n            <Projects\n                companyIndex={props.companyIndex}\n                projects={props.projects}\n            />\n\n        </Fragment>\n\n    );\n\n};\n\nexport default DescCyberinfo;\n","import React, { Fragment } from 'react';\n\nconst DescFFNStart = (props) => (\n\n    <Fragment>\n\n        <div>\n            Mobile Team 時期，以純手工測試開發完的功能在裝置是否正常，並不定期檢測線上功能是否異常加以回報。\n            <br/>\n            <br/>\n            後期 QA Team 合併，便開始撰寫 Test Plan/Test Case 以確保開發完的功能在不同情境下是否都能正常。\n            <br/>\n            <br/>\n            而作為 QA 一年半的時間裡，因與前端配合中慢慢接觸到前端領域並產生興趣，靠著邊自修與切版練習累積實力。\n        </div>\n\n    </Fragment>\n\n);\n\nexport default DescFFNStart;\n","import React, { Fragment } from 'react';\nimport Projects from './Projects';\n\nconst DescFFNEnd = (props) => (\n\n    <Fragment>\n\n        <div>\n            公司願意給我一個內轉前端的機會，便開始了前端生涯。由於曾經是 QA 的一員，較了解測試人員的辛苦，在開發時會更加細心地檢測自己的程式是否有問題。\n        </div>\n\n        {/* 過往專案 */}\n        <Projects\n            companyIndex={props.companyIndex}\n            projects={props.projects}\n        />\n\n    </Fragment>\n\n);\n\nexport default DescFFNEnd;\n","import React, { Fragment } from 'react';\n\nimport common from '../lib/common';\n\nimport DescCyberinfo from './DescCyberinfo';\nimport DescFFNStart from './DescFFNStart';\nimport DescFFNEnd from './DescFFNEnd';\n\nconst Experience = (props) => {\n\n    const experience = (experiences) => experiences.map((item, idx) => (\n\n            <li className={`experience-wrap ${(idx === 0) ? 'active' : ''}`} key={idx}>\n                <div className=\"company-info\" data-idx={idx + 1}>\n                    <div className=\"gridLeft thumb\">\n                        <img src={`${common.imgPath}/${item.thumb}`} alt={item.company} />\n                    </div>\n                    <div className=\"gridRight\">\n                        <p className=\"position\">{item.position}</p>\n                        <p className=\"name\">{item.company}</p>\n                        <span className=\"date\">\n                            <i className=\"material-icons\">schedule</i>\n                            <span>{common.period(item.start, item.end)}</span>\n                        </span>\n                    </div>\n                </div>\n                <div className=\"company-description\">\n                    {showDescComponent(item.companyIndex, item.projects)}\n                </div>\n            </li>\n\n        )),\n        showDescComponent = (company, projects) => {\n\n            switch (company) {\n                case 'ffn-start':\n                    return (\n                        <DescFFNStart\n                            companyIndex={company}\n                        />\n                    );\n\n                case 'ffn-end':\n                    return (\n                        <DescFFNEnd\n                            compoanyIndex={company}\n                            projects={projects}\n                        />\n                    );\n\n                default:\n                    return (\n                        <DescCyberinfo\n                            companyIndex={company}\n                            projects={projects}\n                        />\n                    );\n            }\n\n        };\n\n    return (\n\n        <Fragment>\n\n            <ul className=\"items experiences\">\n                {experience(props.experience)}\n            </ul>\n\n        </Fragment>\n\n    );\n\n};\n\nexport default Experience;\n","import React, { Fragment } from 'react';\n\nconst Footer = () => {\n\n    return (\n\n        <Fragment>\n\n            <footer>\n                <p>Design by Betty @2019</p>\n                <p className=\"notice web\">* 蝙蝠圖片取自網路</p>\n                <p className=\"notice\">* 此頁面不支援 IE 瀏覽，建議使用其他瀏覽器（Ex. Chrome, Firefox...）</p>\n            </footer>\n\n        </Fragment>\n\n    );\n\n};\n\nexport default Footer;\n","import React, { PureComponent } from 'react';\n\nimport './css/Resume.scss';\n\nimport Service from './lib/Service';\nimport Information from './components/Information.js';\nimport Experience from './components/Experience.js';\nimport Footer from './components/Footer.js';\n\nclass Resume extends PureComponent {\n\n    state = {\n        thumb: '',\n        nameChinese: '',\n        nameEnglish: '',\n        about: '',\n        cellphone: '',\n        email: '',\n        github: '',\n        education: [],\n        skills: [],\n        experience: [],\n    };\n\n    componentDidMount () {\n\n        Service.getData('./json/bettyData.json')\n            .then((res) => {\n\n                const { profile, education, skills, experience } = res.data,\n                { thumb, nameChinese, nameEnglish, about, cellphone, email, github } = profile;\n\n                this.setState({\n                    thumb,\n                    nameChinese,\n                    nameEnglish,\n                    about,\n                    cellphone,\n                    email,\n                    github,\n                    education,\n                    skills,\n                    experience,\n                });\n\n            });\n\n    }\n\n    render () {\n\n        return (\n\n            <main>\n                {/* 其他資訊 */}\n                <Information\n                    thumb={this.state.thumb}\n                    nameChinese={this.state.nameChinese}\n                    nameEnglish={this.state.nameEnglish}\n                    about={this.state.about}\n                    cellphone={this.state.cellphone}\n                    email={this.state.email}\n                    github={this.state.github}\n                    education={this.state.education}\n                    skills={this.state.skills}\n                />\n\n                <section>\n                    {/* 經歷 */}\n                    <div className=\"work-detail\">\n                        <h2 className=\"title\" data-icon=\"stars\">\n                            <span>經驗值</span>\n                        </h2>\n\n                        <Experience\n                            experience={this.state.experience}\n                        />\n                    </div>\n\n                    <Footer/>\n                    {/* <footer>Design by Betty @2019</footer> */}\n                </section>\n            </main>\n\n        );\n\n    }\n\n}\n\nexport default Resume;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\n\nimport './css/index.css';\nimport Resume from './Resume';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Resume />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}